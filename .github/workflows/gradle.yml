name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set local time zone
        run: |
          sudo timedatectl set-timezone Asia/Seoul # 원하는 시간대로 설정

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 이력을 가져옵니다.

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set YML and FCM Key
        run: |
          mkdir -p src/main/resources
          # Decode application.yml from base64
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
          
          # Decode FCM key content and save it as the specific JSON file
          echo "${{ secrets.FCM_KEY_PATH_CONTENT }}" | base64 --decode > src/main/resources/foregg-56830-firebase-adminsdk-tgmbx-739218a1a0.json

      - name: Build with Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
        with:
          arguments: clean build

      - name: List build artifacts
        run: ls -alh build/libs/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: foreggcicd
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set local time zone
        run: |
          sudo timedatectl set-timezone Asia/Seoul # 원하는 시간대로 설정

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: foreggcicd

      - name: List downloaded artifacts
        run: ls -alh

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add remote server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: SCP transfer
        run: scp *.jar ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }}:/home/ubuntu/test

      - name: Execute remote commands
        run: |
          ssh -v ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "sudo fuser -k 8080/tcp || true"
          ssh -v ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "sleep 10"
          
          ssh -v ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "sudo nohup /usr/bin/java -jar ~/test/*.jar  > ~/test/nohup.log 2>&1 &"
